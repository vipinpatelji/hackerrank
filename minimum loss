#include <stdio.h>
#include <stdlib.h>

typedef struct {
    long long price;
    int index;
} PriceYear;

int cmp(const void* a, const void* b) {
    PriceYear* p1 = (PriceYear*)a;
    PriceYear* p2 = (PriceYear*)b;
    if (p1->price < p2->price)
        return -1;
    else if (p1->price > p2->price)
        return 1;
    else 
        return 0;
}

int minimumLoss(long long* prices, int n) {
    PriceYear* arr = malloc(n * sizeof(PriceYear));
    for (int i = 0; i < n; i++) {
        arr[i].price = prices[i];
        arr[i].index = i;
    }

    qsort(arr, n, sizeof(PriceYear), cmp);

    long long min_loss = 1LL << 60;  // Large value

    for (int i = 1; i < n; i++) {
        // Sell must happen after buy for loss; buy index < sell index
        if (arr[i-1].index > arr[i].index) {
            long long loss = arr[i].price - arr[i-1].price;
            if (loss < min_loss) {
                min_loss = loss;
            }
        }
    }

    free(arr);
    return (int)min_loss;
}

int main() {
    int n;
    scanf("%d", &n);
    long long* prices = malloc(n * sizeof(long long));
    for (int i = 0; i < n; i++) {
        scanf("%lld", &prices[i]);
    }

    int result = minimumLoss(prices, n);
    printf("%d\n", result);

    free(prices);
    return 0;
}
